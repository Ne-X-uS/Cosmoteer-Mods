Range = 150
IdealRange = [10, 150]
Width = .2
HitInterval = .1
PenetratesStructure = false
SourceShipLowCollisions = false
CrewCollisions = {Enemies=true; Junk=true}

BeamMediaEffects
[
	// The beam itself.
	{
		Type = Beam
		BeamSprite
		{
			Texture
			{
				File = "light_phasor_beam.png"
				SampleMode = Linear
				MipLevels = 1
				UVMode = Clamp
			}
			_noiseTexture
			{
				File = ./Data/common_effects/particles/noise_voronoi.png
				SampleMode = Linear
				MipLevels = max
				UVMode = Wrap
			}
			Shader = "light_phasor_beam.shader"
			_gradientPow = 0.35
			_sineFreq = 2.5
			_sineAmp = 0.03
			_noiseAmp = 0.12
			_gradientIntensity = 3
			_endCapSize = .125
			Size = [100%, .8]
			VertexColor = [255, 255, 0, 255]
			TargetBlendMode
			{
				SourceRgbFactor = SourceAlpha
				DestRgbFactor = One
				RgbOperator = Add
				SourceAlphaFactor = One
				DestAlphaFactor = One
				AlphaOperator = Add
			}
		}
		FadeInTime = .25
		FadeOutTime = .25
		RandomTimeOffset = [0, 1]
		Bucket = Upper1
	}

	// Beam lighting.
	{
		Type = Beam
		BeamSprite
		{
			Texture
			{
				File = "light_phasor_beam.png"
				MipLevels = max
				SampleMode = Linear
			}
			Shader = "./Data/common_effects/fancy_beam_light.shader"
			Size = [100%, 1.6]
			_extraBeginLength = (&Size/1) / 2
			_extraEndLength = (&Size/1) / 2
			VertexColor = [255, 255, 0, 255]
			_z = 0.1
			_litReflectiveStrength = 8
			_litAdditiveStrength = 0
			_unlitAdditiveStrength = 0.25
			_nrmlStrengthLimit = 0.2
			TargetBlendMode
			{
				SourceRgbFactor = InverseDestColor
				DestRgbFactor = One
				RgbOperator = Add
				SourceAlphaFactor = Zero
				DestAlphaFactor = One
				AlphaOperator = Add
			}
		}
		Bucket = Upper4
		IsLight = true
		FadeInTime = .5
		FadeOutTime = .1
	}

	: /BASE_SOUNDS/AudioExterior
	{
		Sound = "light_phasor_beam.wav"
		Volume = 1
		Speed = 1
		MaxConcurrent = 1
		RampUpTime = .05
		RampDownTime = .05

		DynamicVolume : ^/0/DynamicVolume
		{
			UseCustomShapeForDistance = true
		}
		DynamicFilter : ^/0/DynamicFilter
		{
			UseCustomShapeForDistance = true
		}
	}

]

Hit
{
	Type = SimpleHit

	BulletCollisions
	{
		Enemies = true
		Junk = true
		Friendlies = true
		OnlyBulletCategories = [missile, mine, bullet]
	}
	HitBullet
	{
		Offset = [-0.15, 0]

		HitEffects
		[
			{
				Type = Damage
				Damage = 1500
			}
		]

		MediaEffects
		[
			&<particles/phasor_beam_hit_sparks.rules>
		]
	}

	CrewCollisions = {Enemies=true; Junk=true}
	HitCrew = &HitOperational

	HitShield = &HitOperational
	HitOperational
	{
		Offset = [-0.15, 0]

		HitEffects
		[
			{
				Type = Damage
				Damage = 150
			}
		]
		MediaEffects = &../HitBullet/MediaEffects
	}
	HitStructural = &HitOperational
}